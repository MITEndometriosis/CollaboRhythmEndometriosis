<?xml version="1.0"?>

<!---
 - Copyright 2013 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   title="Pain Evaluation">

	<s:Panel title="Pain Evaluation" backgroundColor="0x778899" borderColor="0x778899"
			 left="20" top="20" skinClass="spark.skins.spark.PanelSkin" bottom="20" right="20"
			 horizontalCenter="middle">


		<s:layout>
			<s:VerticalLayout horizontalAlign="center"
							  paddingLeft="10" paddingRight="10"
							  paddingTop="10" paddingBottom="10"/>
		</s:layout>

		<s:Group>
			<mx:ProgressBar id="ScreenProgressBar" labelPlacement="bottom" minimum="0" visible="true" maximum="100"
							color="0x323232" progress="_model.currentPercentage"
							label="CurrentProgress {_model.currentPercentage}%" direction="right" mode="manual"
							width="50%"/>
		</s:Group>

		<s:Scroller skinClass="spark.skins.mobile.SpinnerListScrollerSkin"
					width="100%" height="100%">

			<s:VGroup id="painEvalGroup" horizontalCenter="middle" contentBackgroundColor="0xd3d3d3">

				<s:HGroup contentBackgroundColor="0xd3d3d3">
					<s:Label text="Have you been experiencing pain today?"/>
					<s:ToggleSwitch id="painIndicatorToggleSwitch"
									skinClass="hw2013Endometriosis.plugins.problems.endometriosis.view.YesNoToggleSwitchSkin"
									change="painIndicatorToggleSwitch_changeHandler(event)"
									selected="{_model.hasPain}"
									accentColor="0x9370db"/>
				</s:HGroup>

				<s:HGroup contentBackgroundColor="0xd3d3d3" visible="{painIndicatorToggleSwitch.selected}"
						  includeInLayout="{painIndicatorToggleSwitch.selected}">

					<s:VGroup contentBackgroundColor="0xd3d3d3">

						<s:Label id="PainLocationLabel" text="Where are you having pain?"/>

						<s:VGroup contentBackgroundColor="0xd3d3d3">

							<s:ToggleButton id="ShoulderButton" label="Shoulder"
											skinClass="spark.skins.spark.ToggleButtonSkin"
											change="painLocationButtonHandler(event)"
											chromeColor="0x9370db"
											selected="{_model.hasShoulderPain}"/>
							<s:ToggleButton id="AbdomenButton" label="Abdomen"
											skinClass="spark.skins.spark.ToggleButtonSkin"
											change="painLocationButtonHandler(event)"
											chromeColor="0x9370db"
											selected="{_model.hasAbdomenPain}"/>
							<s:ToggleButton id="PelvisButton" label="Pelvis"
											skinClass="spark.skins.spark.ToggleButtonSkin"
											change="painLocationButtonHandler(event)"
											chromeColor="0x9370db"
											selected="{_model.hasPelvisPain}"/>

							<s:ToggleButton id="FlankButton" label="Flank"
											skinClass="spark.skins.spark.ToggleButtonSkin"
											change="painLocationButtonHandler(event)"
											chromeColor="0x9370db"
											selected="{_model.hasFlankPain}"/>
							<s:ToggleButton id="OtherButton" label="Other"
											skinClass="spark.skins.spark.ToggleButtonSkin"
											click="OtherButton_clickHandler(event)"
											chromeColor="0x9370db"/>
							<s:Button id="NextButton" label="Next" click="nextButtonHandler(event)"
									  skinClass="spark.skins.mobile.ButtonSkin"/>
						</s:VGroup>

					</s:VGroup>

					<s:Image id="painLocationImage" source="@Embed('/assets/images/PainLocation.png')"/>

				</s:HGroup>

			</s:VGroup>

		</s:Scroller>

	</s:Panel>

	<fx:Script><![CDATA[
		import hw2013Endometriosis.plugins.problems.endometriosis.controller.PainEvaluationHealthActionInputController;
		import hw2013Endometriosis.plugins.problems.endometriosis.model.PainEvaluationModel;

		import mx.skins.spark.ButtonSkin;

		import spark.skins.mobile160.assets.Button_down;

		[Bindable]
		private var _controller:PainEvaluationHealthActionInputController;
		private var _model:PainEvaluationModel;


		override public function set data(value:Object):void
		{
			super.data = value;

			_controller = value as PainEvaluationHealthActionInputController;
			_model = _controller.model;

		}

		private function painIndicatorToggleSwitch_changeHandler(event:Event):void
		{
			if (_controller)
			{
				_controller.updateHasPain(painIndicatorToggleSwitch.selected);
			}

		}

		private function painLocationButtonHandler(event:Event):void
		{
			if (_controller)
			{

				_controller.updateHasShoulderPain(ShoulderButton.selected);
				_controller.updateHasAbdomenPain(AbdomenButton.selected);
				_controller.updateHasPelvisPain(PelvisButton.selected);
				_controller.updateHasFlankPain(FlankButton.selected);
			}
		}

		private function nextButtonHandler(event:Event):void
		{
			if (_controller)
			{

				_controller.updateScreenProgressBar();
				_controller.changeScreens();

			}
		}

		private function createHitArea(bitmapData:BitmapData, grainSize:uint = 1):Sprite
		{
			var _hitarea:Sprite = new Sprite();
			_hitarea.graphics.beginFill(0x000000, 1.0);
			for (var x:uint = 0; x < bitmapData.width; x += grainSize)
			{
				for (var y:uint = grainSize; y < bitmapData.height; y += grainSize)
				{
					if (x <= bitmapData.width && y <= bitmapData.height && bitmapData.getPixel(x, y) != 0)
					{
						_hitarea.graphics.drawRect(x, y, grainSize, grainSize);
					}
				}
			}
			_hitarea.graphics.endFill();
			return _hitarea;
		}

		private function OtherButton_clickHandler(event:MouseEvent):void
		{
			(new AlertMessage()).open(this, false);

		}
		]]>

	</fx:Script>

</tablet:TabletViewBase>