<?xml version="1.0"?>
<!---
 - Copyright 2013 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   xmlns:view="hw2013Endometriosis.plugins.problems.endometriosis.view.*"
					   title="IncisionEvaluation">

	<s:Panel title="Incision Evaluation." backgroundColor="0x778899" borderColor="0x778899" width="1000"
			 x="20" y="20" skinClass="spark.skins.spark.PanelSkin">

		<s:layout>
			<s:VerticalLayout horizontalAlign="center"
							  paddingLeft="10" paddingRight="10"
							  paddingTop="10" paddingBottom="10"/>
		</s:layout>

		<s:Form skinClass="spark.skins.spark.FormSkin" backgroundColor="0xd3d3d3">

			<s:FormHeading label="Please take a look at your incisions."
						   skinClass="spark.skins.spark.FormHeadingSkin"/>

			<s:FormItem label="Are any of them red?" skinClass="spark.skins.spark.FormItemSkin"
						backgroundColor="0xd3d3d3">
				<s:ToggleSwitch id="rednessIndicatorToggleSwitch"
								skinClass="hw2013Endometriosis.plugins.problems.endometriosis.view.YesNoToggleSwitchSkin"
								change="rednessIndicatorToggleSwitch_changeHandler(event)"
								accentColor="0x9370db"/>
			</s:FormItem>

			<s:FormItem label="How wide is the redness?" visible="{rednessIndicatorToggleSwitch.selected}"
						includeInLayout="{rednessIndicatorToggleSwitch.selected}"
						skinClass="spark.skins.spark.FormItemSkin"
						backgroundColor="0xd3d3d3">
				<s:HGroup>
					<s:TextInput id="rednessWidthTextInput" skinClass="spark.skins.mobile.StageTextInputSkin" width="50"
								 textAlign="right" restrict="0-9." softKeyboardType="number"/>
					<s:Label text="mm" alignmentBaseline="ideographicBottom"/>
				</s:HGroup>
			</s:FormItem>

			<!--			<s:FormItem label="Color:" visible="{_model.showRednessDetails}"
									includeInLayout="{_model.showRednessDetails}" skinClass="spark.skins.spark.FormItemSkin">
							<s:SpinnerListContainer width="150" height="100"
													skinClass="spark.skins.mobile.SpinnerListContainerSkin">
								<s:SpinnerList id="rednessIndicatorSpinnerList" labelField="color"
											   dataProvider="{rednessIndicatorArrayCollection}"
											   skinClass="spark.skins.mobile.SpinnerListSkin" width="100%"/>
							</s:SpinnerListContainer>
						</s:FormItem>-->

			<s:FormItem label="Are they sensitive?" skinClass="spark.skins.spark.FormItemSkin"
						backgroundColor="0xd3d3d3">
				<s:ToggleSwitch id="tendernessIndicatorToggleSwitch"
								skinClass="hw2013Endometriosis.plugins.problems.endometriosis.view.YesNoToggleSwitchSkin"
								change="tendernessIndicatorToggleSwitch_changeHandler(event)"
								accentColor="0x9370db"/>
			</s:FormItem>

			<s:FormItem label="Do any of them have discharge?" skinClass="spark.skins.spark.FormItemSkin"
						backgroundColor="0xd3d3d3">
				<s:ToggleSwitch id="dischargeIndicatorToggleSwitch"
								skinClass="hw2013Endometriosis.plugins.problems.endometriosis.view.YesNoToggleSwitchSkin"
								change="dischargeIndicatorToggleSwitch_changeHandler(event)"
								accentColor="0x9370db"/>
			</s:FormItem>

			<s:FormItem label="What kind of discharge?" visible="{dischargeIndicatorToggleSwitch.selected}"
						includeInLayout="{dischargeIndicatorToggleSwitch.selected}"
						skinClass="spark.skins.spark.FormItemSkin"
						backgroundColor="0xd3d3d3">
				<s:HGroup>
					<s:CheckBox id="dischargePussCheckBox" label="Puss" skinClass="spark.skins.spark.CheckBoxSkin"
								change="dischargePussCheckBox_changeHandler(event)"/>
					<s:CheckBox id="dischargeBloodCheckBox" label="Blood" skinClass="spark.skins.spark.CheckBoxSkin"
								change="dischargeBloodCheckBox_changeHandler(event)"/>
				</s:HGroup>
			</s:FormItem>

			<s:FormItem skinClass="spark.skins.spark.FormItemSkin" backgroundColor="0xd3d3d3">
				<s:Button label="Submit"
						  width="100"
						  skinClass="spark.skins.mobile.ButtonSkin"
						  chromeColor="0x9370db"/>
			</s:FormItem>

		</s:Form>
	</s:Panel>

	<fx:Declarations>
		<!--		<s:ArrayCollection id="rednessIndicatorArrayCollection">
					<fx:Object color="pink"/>
					<fx:Object color="light red"/>
					<fx:Object color="dark red"/>
				</s:ArrayCollection>-->
	</fx:Declarations>

	<fx:Script><![CDATA[
		import hw2013Endometriosis.plugins.problems.endometriosis.controller.IncisionEvaluationHealthActionInputController;
		import hw2013Endometriosis.plugins.problems.endometriosis.model.IncisionEvaluationModel;

		[Bindable]
		private var _controller:IncisionEvaluationHealthActionInputController;
		private var _model:IncisionEvaluationModel;

		override public function set data(value:Object):void
		{
			super.data = value;

			_controller = value as IncisionEvaluationHealthActionInputController;
			_model = _controller.model;
		}


		private function rednessIndicatorToggleSwitch_changeHandler(event:Event):void
		{
			if (_controller)
			{
				_controller.updateHasRedness(rednessIndicatorToggleSwitch.selected);
			}
		}

		private function tendernessIndicatorToggleSwitch_changeHandler(event:Event):void
		{
			if (_controller)
			{
				_controller.updateHasTenderness(tendernessIndicatorToggleSwitch.selected);
			}
		}

		private function dischargeIndicatorToggleSwitch_changeHandler(event:Event):void
		{
			if (_controller)
			{
				_controller.updateHasDischarge(dischargeIndicatorToggleSwitch.selected);
			}
		}

		private function dischargePussCheckBox_changeHandler(event:Event):void
		{
		}

		private function dischargeBloodCheckBox_changeHandler(event:Event):void
		{
		}
		]]></fx:Script>


</tablet:TabletViewBase>
